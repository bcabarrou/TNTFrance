<?php
/**
* This class has been generated by TheliaStudio
* For more information, see https://github.com/thelia-modules/TheliaStudio
*/

namespace TNTFrance\Form\Base;

use TNTFrance\TNTFrance;
use Thelia\Form\BaseForm;
use TNTFrance\Model\Config\TNTFranceConfigValue;
use Symfony\Component\Validator\Constraints\NotBlank;

/**
 * Class TNTFranceConfigForm
 * @package TNTFrance\Form\Base
 * @author TheliaStudio
 */
class TNTFranceConfigForm extends BaseForm
{
    const FORM_NAME = "tntfrance_config_form";

    /**
     *
     * in this function you add all the fields you need for your Form.
     * Form this you have to call add method on $this->formBuilder attribute :
     *
     * $this->formBuilder->add("name", "text")
     *   ->add("email", "email", array(
     *           "attr" => array(
     *               "class" => "field"
     *           ),
     *           "label" => "email",
     *           "constraints" => array(
     *               new \Symfony\Component\Validator\Constraints\NotBlank()
     *           )
     *       )
     *   )
     *   ->add('age', 'integer');
     *
     * @return null
     */
    protected function buildForm()
    {
        $translationKeys = $this->getTranslationKeys();
        $fieldsIdKeys = $this->getFieldsIdKeys();

        $this->addEnabledField($translationKeys, $fieldsIdKeys);
        $this->addModeProductionField($translationKeys, $fieldsIdKeys);
        $this->addAccountNumberField($translationKeys, $fieldsIdKeys);
        $this->addUsernameField($translationKeys, $fieldsIdKeys);
        $this->addPasswordField($translationKeys, $fieldsIdKeys);
        $this->addUseIndividualField($translationKeys, $fieldsIdKeys);
        $this->addUseEnterpriseField($translationKeys, $fieldsIdKeys);
        $this->addUseDepotField($translationKeys, $fieldsIdKeys);
        $this->addUseDropoffpointField($translationKeys, $fieldsIdKeys);
        $this->addProductsEnabledField($translationKeys, $fieldsIdKeys);
        $this->addOptionsEnabledField($translationKeys, $fieldsIdKeys);
        $this->addRegularPickupField($translationKeys, $fieldsIdKeys);
        $this->addSenderNameField($translationKeys, $fieldsIdKeys);
        $this->addSenderAddress1Field($translationKeys, $fieldsIdKeys);
        $this->addSenderAddress2Field($translationKeys, $fieldsIdKeys);
        $this->addSenderZipCodeField($translationKeys, $fieldsIdKeys);
        $this->addSenderCityField($translationKeys, $fieldsIdKeys);
        $this->addContactLastnameField($translationKeys, $fieldsIdKeys);
        $this->addContactFirstnameField($translationKeys, $fieldsIdKeys);
        $this->addContactEmailField($translationKeys, $fieldsIdKeys);
        $this->addContactPhoneField($translationKeys, $fieldsIdKeys);
        $this->addNotificationEmailsField($translationKeys, $fieldsIdKeys);
        $this->addNotificationSuccessField($translationKeys, $fieldsIdKeys);
        $this->addLabelFormatField($translationKeys, $fieldsIdKeys);
        $this->addFreeShippingField($translationKeys, $fieldsIdKeys);
        $this->addMaxWeightPackageField($translationKeys, $fieldsIdKeys);
        $this->addTrackingUrlField($translationKeys, $fieldsIdKeys);
    }

    protected function addEnabledField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("enabled", "checkbox", array(
                "label" => $this->readKey("enabled", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("enabled", $fieldsIdKeys),
                    "help" => $this->readKey("help.enabled", $translationKeys)
                ],
                "required" => false,
                "constraints" => array(
                ),
                "value" => TNTFrance::getConfigValue(TNTFranceConfigValue::ENABLED, false),
            ))
        ;
    }

    protected function addModeProductionField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("mode_production", "checkbox", array(
                "label" => $this->readKey("mode_production", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("mode_production", $fieldsIdKeys),
                    "help" => $this->readKey("help.mode_production", $translationKeys)
                ],
                "required" => false,
                "constraints" => array(
                ),
                "value" => TNTFrance::getConfigValue(TNTFranceConfigValue::MODE_PRODUCTION, false),
            ))
        ;
    }

    protected function addAccountNumberField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("account_number", "text", array(
                "label" => $this->readKey("account_number", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("account_number", $fieldsIdKeys),
                    "help" => $this->readKey("help.account_number", $translationKeys)
                ],
                "required" => true,
                "constraints" => array(
                    new NotBlank(),
                ),
                "data" => TNTFrance::getConfigValue(TNTFranceConfigValue::ACCOUNT_NUMBER),
            ))
        ;
    }

    protected function addUsernameField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("username", "text", array(
                "label" => $this->readKey("username", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("username", $fieldsIdKeys),
                    "help" => $this->readKey("help.username", $translationKeys)
                ],
                "required" => true,
                "constraints" => array(
                    new NotBlank(),
                ),
                "data" => TNTFrance::getConfigValue(TNTFranceConfigValue::USERNAME),
            ))
        ;
    }

    protected function addPasswordField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("password", "text", array(
                "label" => $this->readKey("password", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("password", $fieldsIdKeys),
                    "help" => $this->readKey("help.password", $translationKeys)
                ],
                "required" => true,
                "constraints" => array(
                    new NotBlank(),
                ),
                "data" => TNTFrance::getConfigValue(TNTFranceConfigValue::PASSWORD),
            ))
        ;
    }

    protected function addUseIndividualField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("use_individual", "checkbox", array(
                "label" => $this->readKey("use_individual", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("use_individual", $fieldsIdKeys),
                    "help" => $this->readKey("help.use_individual", $translationKeys)
                ],
                "required" => false,
                "constraints" => array(
                ),
                "value" => TNTFrance::getConfigValue(TNTFranceConfigValue::USE_INDIVIDUAL, false),
            ))
        ;
    }

    protected function addUseEnterpriseField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("use_enterprise", "checkbox", array(
                "label" => $this->readKey("use_enterprise", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("use_enterprise", $fieldsIdKeys),
                    "help" => $this->readKey("help.use_enterprise", $translationKeys)
                ],
                "required" => false,
                "constraints" => array(
                ),
                "value" => TNTFrance::getConfigValue(TNTFranceConfigValue::USE_ENTERPRISE, false),
            ))
        ;
    }

    protected function addUseDepotField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("use_depot", "checkbox", array(
                "label" => $this->readKey("use_depot", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("use_depot", $fieldsIdKeys),
                    "help" => $this->readKey("help.use_depot", $translationKeys)
                ],
                "required" => false,
                "constraints" => array(
                ),
                "value" => TNTFrance::getConfigValue(TNTFranceConfigValue::USE_DEPOT, false),
            ))
        ;
    }

    protected function addUseDropoffpointField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("use_dropoffpoint", "checkbox", array(
                "label" => $this->readKey("use_dropoffpoint", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("use_dropoffpoint", $fieldsIdKeys),
                    "help" => $this->readKey("help.use_dropoffpoint", $translationKeys)
                ],
                "required" => false,
                "constraints" => array(
                ),
                "value" => TNTFrance::getConfigValue(TNTFranceConfigValue::USE_DROPOFFPOINT, false),
            ))
        ;
    }

    protected function addProductsEnabledField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("products_enabled", "text", array(
                "label" => $this->readKey("products_enabled", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("products_enabled", $fieldsIdKeys),
                    "help" => $this->readKey("help.products_enabled", $translationKeys)
                ],
                "required" => true,
                "constraints" => array(
                    new NotBlank(),
                ),
                "data" => TNTFrance::getConfigValue(TNTFranceConfigValue::PRODUCTS_ENABLED),
            ))
        ;
    }

    protected function addOptionsEnabledField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("options_enabled", "text", array(
                "label" => $this->readKey("options_enabled", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("options_enabled", $fieldsIdKeys),
                    "help" => $this->readKey("help.options_enabled", $translationKeys)
                ],
                "required" => true,
                "constraints" => array(
                    new NotBlank(),
                ),
                "data" => TNTFrance::getConfigValue(TNTFranceConfigValue::OPTIONS_ENABLED),
            ))
        ;
    }

    protected function addRegularPickupField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("regular_pickup", "checkbox", array(
                "label" => $this->readKey("regular_pickup", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("regular_pickup", $fieldsIdKeys),
                    "help" => $this->readKey("help.regular_pickup", $translationKeys)
                ],
                "required" => false,
                "constraints" => array(
                ),
                "value" => TNTFrance::getConfigValue(TNTFranceConfigValue::REGULAR_PICKUP, false),
            ))
        ;
    }

    protected function addSenderNameField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("sender_name", "text", array(
                "label" => $this->readKey("sender_name", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("sender_name", $fieldsIdKeys),
                    "help" => $this->readKey("help.sender_name", $translationKeys)
                ],
                "required" => true,
                "constraints" => array(
                    new NotBlank(),
                ),
                "data" => TNTFrance::getConfigValue(TNTFranceConfigValue::SENDER_NAME),
            ))
        ;
    }

    protected function addSenderAddress1Field(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("sender_address1", "text", array(
                "label" => $this->readKey("sender_address1", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("sender_address1", $fieldsIdKeys),
                    "help" => $this->readKey("help.sender_address1", $translationKeys)
                ],
                "required" => true,
                "constraints" => array(
                    new NotBlank(),
                ),
                "data" => TNTFrance::getConfigValue(TNTFranceConfigValue::SENDER_ADDRESS1),
            ))
        ;
    }

    protected function addSenderAddress2Field(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("sender_address2", "text", array(
                "label" => $this->readKey("sender_address2", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("sender_address2", $fieldsIdKeys),
                    "help" => $this->readKey("help.sender_address2", $translationKeys)
                ],
                "required" => true,
                "constraints" => array(
                    new NotBlank(),
                ),
                "data" => TNTFrance::getConfigValue(TNTFranceConfigValue::SENDER_ADDRESS2),
            ))
        ;
    }

    protected function addSenderZipCodeField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("sender_zip_code", "text", array(
                "label" => $this->readKey("sender_zip_code", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("sender_zip_code", $fieldsIdKeys),
                    "help" => $this->readKey("help.sender_zip_code", $translationKeys)
                ],
                "required" => true,
                "constraints" => array(
                    new NotBlank(),
                ),
                "data" => TNTFrance::getConfigValue(TNTFranceConfigValue::SENDER_ZIP_CODE),
            ))
        ;
    }

    protected function addSenderCityField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("sender_city", "text", array(
                "label" => $this->readKey("sender_city", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("sender_city", $fieldsIdKeys),
                    "help" => $this->readKey("help.sender_city", $translationKeys)
                ],
                "required" => true,
                "constraints" => array(
                    new NotBlank(),
                ),
                "data" => TNTFrance::getConfigValue(TNTFranceConfigValue::SENDER_CITY),
            ))
        ;
    }

    protected function addContactLastnameField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("contact_lastname", "text", array(
                "label" => $this->readKey("contact_lastname", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("contact_lastname", $fieldsIdKeys),
                    "help" => $this->readKey("help.contact_lastname", $translationKeys)
                ],
                "required" => true,
                "constraints" => array(
                    new NotBlank(),
                ),
                "data" => TNTFrance::getConfigValue(TNTFranceConfigValue::CONTACT_LASTNAME),
            ))
        ;
    }

    protected function addContactFirstnameField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("contact_firstname", "text", array(
                "label" => $this->readKey("contact_firstname", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("contact_firstname", $fieldsIdKeys),
                    "help" => $this->readKey("help.contact_firstname", $translationKeys)
                ],
                "required" => true,
                "constraints" => array(
                    new NotBlank(),
                ),
                "data" => TNTFrance::getConfigValue(TNTFranceConfigValue::CONTACT_FIRSTNAME),
            ))
        ;
    }

    protected function addContactEmailField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("contact_email", "text", array(
                "label" => $this->readKey("contact_email", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("contact_email", $fieldsIdKeys),
                    "help" => $this->readKey("help.contact_email", $translationKeys)
                ],
                "required" => true,
                "constraints" => array(
                    new NotBlank(),
                ),
                "data" => TNTFrance::getConfigValue(TNTFranceConfigValue::CONTACT_EMAIL),
            ))
        ;
    }

    protected function addContactPhoneField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("contact_phone", "text", array(
                "label" => $this->readKey("contact_phone", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("contact_phone", $fieldsIdKeys),
                    "help" => $this->readKey("help.contact_phone", $translationKeys)
                ],
                "required" => true,
                "constraints" => array(
                    new NotBlank(),
                ),
                "data" => TNTFrance::getConfigValue(TNTFranceConfigValue::CONTACT_PHONE),
            ))
        ;
    }

    protected function addNotificationEmailsField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("notification_emails", "text", array(
                "label" => $this->readKey("notification_emails", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("notification_emails", $fieldsIdKeys),
                    "help" => $this->readKey("help.notification_emails", $translationKeys)
                ],
                "required" => true,
                "constraints" => array(
                    new NotBlank(),
                ),
                "data" => TNTFrance::getConfigValue(TNTFranceConfigValue::NOTIFICATION_EMAILS),
            ))
        ;
    }

    protected function addNotificationSuccessField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("notification_success", "checkbox", array(
                "label" => $this->readKey("notification_success", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("notification_success", $fieldsIdKeys),
                    "help" => $this->readKey("help.notification_success", $translationKeys)
                ],
                "required" => false,
                "constraints" => array(
                ),
                "value" => TNTFrance::getConfigValue(TNTFranceConfigValue::NOTIFICATION_SUCCESS, false),
            ))
        ;
    }

    protected function addLabelFormatField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("label_format", "text", array(
                "label" => $this->readKey("label_format", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("label_format", $fieldsIdKeys),
                    "help" => $this->readKey("help.label_format", $translationKeys)
                ],
                "required" => true,
                "constraints" => array(
                    new NotBlank(),
                ),
                "data" => TNTFrance::getConfigValue(TNTFranceConfigValue::LABEL_FORMAT),
            ))
        ;
    }

    protected function addFreeShippingField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("free_shipping", "checkbox", array(
                "label" => $this->readKey("free_shipping", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("free_shipping", $fieldsIdKeys),
                    "help" => $this->readKey("help.free_shipping", $translationKeys)
                ],
                "required" => false,
                "constraints" => array(
                ),
                "value" => TNTFrance::getConfigValue(TNTFranceConfigValue::FREE_SHIPPING, false),
            ))
        ;
    }

    protected function addMaxWeightPackageField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("max_weight_package", "text", array(
                "label" => $this->readKey("max_weight_package", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("max_weight_package", $fieldsIdKeys),
                    "help" => $this->readKey("help.max_weight_package", $translationKeys)
                ],
                "required" => false,
                "constraints" => array(
                ),
                "data" => TNTFrance::getConfigValue(TNTFranceConfigValue::MAX_WEIGHT_PACKAGE),
            ))
        ;
    }

    protected function addTrackingUrlField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder
            ->add("tracking_url", "text", array(
                "label" => $this->readKey("tracking_url", $translationKeys),
                "label_attr" => [
                    "for" => $this->readKey("tracking_url", $fieldsIdKeys),
                    "help" => $this->readKey("help.tracking_url", $translationKeys)
                ],
                "required" => false,
                "constraints" => array(
                ),
                "data" => TNTFrance::getConfigValue(TNTFranceConfigValue::TRACKING_URL),
            ))
        ;
    }

    public function getName()
    {
        return static::FORM_NAME;
    }

    public function readKey($key, array $keys, $default = '')
    {
        if (isset($keys[$key])) {
            return $keys[$key];
        }

        return $default;
    }

    public function getTranslationKeys()
    {
        return array();
    }

    public function getFieldsIdKeys()
    {
        return array(
            "enabled" => "enabled",
            "mode_production" => "mode_production",
            "account_number" => "account_number",
            "username" => "username",
            "password" => "password",
            "use_individual" => "use_individual",
            "use_enterprise" => "use_enterprise",
            "use_depot" => "use_depot",
            "use_dropoffpoint" => "use_dropoffpoint",
            "products_enabled" => "products_enabled",
            "options_enabled" => "options_enabled",
            "regular_pickup" => "regular_pickup",
            "sender_name" => "sender_name",
            "sender_address1" => "sender_address1",
            "sender_address2" => "sender_address2",
            "sender_zip_code" => "sender_zip_code",
            "sender_city" => "sender_city",
            "contact_lastname" => "contact_lastname",
            "contact_firstname" => "contact_firstname",
            "contact_email" => "contact_email",
            "contact_phone" => "contact_phone",
            "notification_emails" => "notification_emails",
            "notification_success" => "notification_success",
            "label_format" => "label_format",
        );
    }
}
